- Garbage collection
	- Before every allocation?
	- When we run out of memory?
	- Whenever we overflow some fixed pool?

- Better malloc() implementation
	- Take dmalloc() from the windows driver?
	- Put blocks in a tree?

- Submit cursor images

- Find out why it picks 8x6 rather than a reasonable mode

- Hook up randr if it isn't already

- Acceleration
	- Blits and solid fill

- Only compile mmtest if glib is installed
	Or maybe just get rid of mmtest.c

Question:

- What is the "vram" PCI range used for? 

  As I read the Windows driver, it can be mapped with the ioctl
  VIDEO_MAP_VIDEO_MEMORY. In driver.c it is mapped as pdev->fb, but
  it is then never used for anything as far as I can tell.

  Does Windows itself use that ioctl, and if so, for what. The area
  is only 32K in size so it can't really be used for any realistic
  bitmaps.

    It's a required ioctl.  I believe it's needed for DGA-like things.
    I have no idea how the Windows driver manages syncing for that,
    but I think we can safely ignore it. [ajax]

-=-=-=-=-

Done:

- Get rid of qxl_mem.h header; just use qxl.h

- Split out ring code into qxl_ring.c

- Don't keep the maps around that are just used in preinit
	(Is there any real reason to not just do the CheckDevice in ScreenInit?)
